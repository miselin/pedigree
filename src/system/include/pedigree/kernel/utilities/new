/*
 * Copyright (c) 2008 James Molloy, Jörg Pfähler, Matthew Iselin
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#ifndef _NEW_H
#define _NEW_H

// If UTILITY_LINUX is set, we're working on Linux and so already have <new>.
#if !UTILITY_LINUX

#include "pedigree/kernel/compiler.h"
#include "pedigree/kernel/processor/types.h"

#if HOSTED
#define PEDIGREE_NOEXCEPT
#else
#define PEDIGREE_NOEXCEPT noexcept
#endif

// Conventional new
void *operator new (size_t size) PEDIGREE_NOEXCEPT;
void *operator new[] (size_t size) PEDIGREE_NOEXCEPT;
void operator delete (void * p) noexcept;
void operator delete[] (void * p) noexcept;

// Placement new
void* operator new(size_t, void* p) noexcept;
void* operator new[](size_t, void* p) noexcept;
void  operator delete  (void*, void*) noexcept;
void  operator delete  (void *p, size_t) noexcept;
void  operator delete[](void*, void*) noexcept;
void  operator delete[](void *p, size_t) noexcept;

#undef PEDIGREE_NOEXCEPT

#else
#include <new>  // IWYU pragma: export
#endif  // UTILITY_LINUX

#endif
